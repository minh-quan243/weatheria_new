import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
from tqdm import tqdm
import os
import matplotlib.pyplot as plt
import seaborn as sns

# =======================
# üì• 1. Load d·ªØ li·ªáu th·ªùi ti·∫øt
# =======================
weather_df = pd.read_csv(
    "D:/Pycharm/weather-new/data/Raw/weather_all_cities_2001_2024.csv",
    parse_dates=["Datetime"]
)
weather_df = weather_df.dropna(subset=["Latitude", "Longitude"])

# T·∫°o GeoDataFrame
weather_gdf = gpd.GeoDataFrame(
    weather_df,
    geometry=gpd.points_from_xy(weather_df["Longitude"], weather_df["Latitude"]),
    crs="EPSG:4326"
)

# =======================
# üì• 2. Load d·ªØ li·ªáu b√£o
# =======================
storm_gdf = gpd.read_file("D:/Pycharm/weather-new/data/Raw/storm_buffers_with_time.gpkg")
storm_gdf = storm_gdf.to_crs("EPSG:4326")

# M·ªü r·ªông v√πng b√£o nh·∫π (~20km)
# Chuy·ªÉn sang h·ªá t·ªça ƒë·ªô ph·∫≥ng (ƒë∆°n v·ªã: m√©t) ‚Äì Web Mercator
storm_gdf_proj = storm_gdf.to_crs(epsg=3857)

# Buffer b√°n k√≠nh 20km = 20000m
storm_gdf_proj["geometry"] = storm_gdf_proj.buffer(20000)

# ƒê·ªïi v·ªÅ l·∫°i h·ªá ƒë·ªãa l√Ω
storm_gdf = storm_gdf_proj.to_crs(epsg=4326)


# =======================
# üåÄ 3. G√°n nh√£n max_wind
# =======================
weather_gdf["max_wind"] = weather_df["WindSpeed"]  # m·∫∑c ƒë·ªãnh = 0 n·∫øu kh√¥ng ·∫£nh h∆∞·ªüng b√£o

print("‚úÖ ƒêang g√°n nh√£n max_wind...")
for idx, storm in tqdm(storm_gdf.iterrows(), total=storm_gdf.shape[0]):
    start_time = pd.to_datetime(storm["start_time"])
    end_time = pd.to_datetime(storm["end_time"])
    geometry = storm.geometry
    storm_max_wind = storm.get("max_wind")

    mask_time = weather_gdf["Datetime"].between(start_time, end_time)
    mask_space = weather_gdf["geometry"].within(geometry)
    affected_idx = weather_gdf[mask_time & mask_space].index

    # Ch·ªâ c·∫≠p nh·∫≠t n·∫øu storm_max_wind l√† s·ªë h·ª£p l·ªá
    if pd.notna(storm_max_wind) and storm_max_wind > 0:
        weather_gdf.loc[affected_idx, "max_wind"] = storm_max_wind

# =======================
# üíæ 4. Ghi d·ªØ li·ªáu ra CSV
# =======================
output_path = "D:/Pycharm/weather-new/data/Processed/Regression/storm_regression_dataset.csv"
os.makedirs(os.path.dirname(output_path), exist_ok=True)
weather_gdf.drop(columns=["geometry"]).to_csv(output_path, index=False)
print(f"‚úÖ ƒê√£ l∆∞u d·ªØ li·ªáu t·∫°i: {output_path}")

# =======================
# üìä 5. BI·ªÇU ƒê·ªí TH·ªêNG K√ä & H·ªíI QUY
# =======================
df = pd.read_csv(output_path)
features = ['Rain', 'Temp', 'WindSpeed', 'Pressure', 'Humidity', 'CloudCover', 'WindDirection']

# 1Ô∏è‚É£ Histogram ph√¢n b·ªë max_wind
plt.figure(figsize=(6, 4))
sns.histplot(df["max_wind"], bins=50, color="skyblue", kde=True)
plt.title("Ph√¢n b·ªë max_wind (gi√≥ c·ª±c ƒë·∫°i)")
plt.xlabel("max_wind")
plt.tight_layout()
plt.show()

# 2Ô∏è‚É£ Boxplot max_wind theo City (n·∫øu mu·ªën xem v√πng b·ªã ·∫£nh h∆∞·ªüng m·∫°nh)
plt.figure(figsize=(10, 5))
sns.boxplot(data=df[df["max_wind"] > 0], x="City", y="max_wind", color="skyblue")
plt.title("max_wind theo t·ª´ng City (ch·ªâ l·∫•y ƒëi·ªÉm c√≥ b√£o)")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# 3Ô∏è‚É£ Scatter plot: WindSpeed th·ª±c t·∫ø vs max_wind c·ªßa b√£o
plt.figure(figsize=(6, 4))
sns.scatterplot(data=df[df["max_wind"] > 0], x="WindSpeed", y="max_wind", hue="City", alpha=0.5)
plt.title("T∆∞∆°ng quan WindSpeed th·ª±c t·∫ø v·ªõi max_wind c·ªßa b√£o")
plt.tight_layout()
plt.show()

# 4Ô∏è‚É£ Heatmap t∆∞∆°ng quan
plt.figure(figsize=(8, 6))
corr = df[features + ["max_wind"]].corr()
sns.heatmap(corr, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Ma tr·∫≠n t∆∞∆°ng quan gi·ªØa c√°c ƒë·∫∑c tr∆∞ng v√† max_wind")
plt.tight_layout()
plt.show()
